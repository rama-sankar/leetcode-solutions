class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& v, int k) {
        int n=v.size();
        vector<int> res;
    deque<int> q; int i = 0;
	for (i = 0; i < k; i++)
	{
		while (!q.empty() and v[i] >= v[q.back()]) q.pop_back();
		q.push_back(i);
	}
	for (; i < n; i++)
	{
		res.push_back(v[q.front()]);
		if (!q.empty() and q.front() <= i - k) q.pop_front();
		while (!q.empty() and v[i] >= v[q.back()]) q.pop_back();
		q.push_back(i);
	}
	res.push_back(v[q.front()]);
        return res;
    }
};