/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        
        if(head==NULL) return head;
        
        ListNode *ptr = head;
        int len = 0;
        while(ptr){
            ptr = ptr->next;
            len++;
        }
        
       // cout<<len;
        
        k=k%len;
        //cout<<k;
        
        if(k==0) return head;
        
        ptr = head;
        while(k--){
            ptr = ptr->next;
        }
        
        ListNode* end=head;
        
        while(ptr->next!=NULL){
            end=end->next;
            ptr=ptr->next;
        }
        
        ListNode*  newhead = end->next;
        ptr->next = head;
        end->next =NULL;
        return newhead;
        
        
        
        
        
        
    }
};