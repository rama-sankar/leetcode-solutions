class Solution {
public:
    int sumSubarrayMins(vector<int>& A) {
        
        int n=A.size();
        
        if(n==1) return A[0];
        
        vector<int> next(n);
        vector<int> prev(n);
        
        for(int i=0;i<n;i++){
            next[i] = n-1-i;
            prev[i] = i;
        }
        
        stack<int> s;
        for(int i=0;i<n;i++){
            
            while(!s.empty() and A[s.top()]>A[i]){
                next[s.top()] = i-s.top()-1;
                s.pop();
            }
            s.push(i);
        }
        
    
        stack<int> s2;
        
        for(int i=n-1;i>=0;i--){
            while(!s2.empty() and A[s2.top()]>=A[i]){
                prev[s2.top()] = s2.top()-i-1;
                s2.pop();
            }
            s2.push(i);
        }
        

        
        int res=0;
            
            for(int i=0;i<n;i++){
                res = (res+A[i]*(next[i]+1)*(prev[i]+1) )%1000000007;
            }
        
        return res;
        
    }
};