/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root,map<int,int>& m,int &res){
        if(root->left ==NULL and root->right==NULL)
        {
         m[root->val]++;int count = 0;
            for(auto i : m){
                if(i.second%2==1) count++;
            }
            if(count<=1) res++;
             m[root->val]--;
            return;
        }
        m[root->val]++;
        if(root->left!=NULL)
        {
         dfs(root->left,m,res);   
        }
        if(root->right!=NULL)
        {
         dfs(root->right,m,res);   
        }
         m[root->val]--;
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        
        int res=0;
        map<int,int> m;
        dfs(root,m,res);
        return res;
    }
};