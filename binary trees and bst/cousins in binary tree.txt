/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs1(TreeNode* root,int x,int depth, unordered_map<int,int>& par, unordered_map<int,int>& level)
    {
     par[root->val]=x;
     level[root->val]=depth;
     if(root->left!=NULL) dfs1(root->left,root->val,depth+1,par,level);
     if(root->right!=NULL) dfs1(root->right,root->val,depth+1,par,level);
    }
    
    bool isCousins(TreeNode* root, int x, int y) {
     unordered_map<int,int> par,level;
        dfs1(root,INT_MAX,0,par,level);
        if( (par[x]!=par[y]) and (level[x]==level[y]) ) {return true;}
        return false;
    }
};