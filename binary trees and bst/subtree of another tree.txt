/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSubtree(TreeNode* s, TreeNode* t) {
        if(s==NULL and t==NULL) return true ;
        
        
         return traverse(s,t);
    }
    
    bool isequal(TreeNode* s, TreeNode* t){
       
         if(s==NULL and t==NULL) return true;
        if(s==NULL or t==NULL) return false;
       
        if(s->val!=t->val) return false;
        return isequal(s->left,t->left) and isequal(s->right,t->right);
    }
                 
    bool traverse(TreeNode* s, TreeNode* t){
        if(s==NULL) return false;
       return   isequal(s,t) or traverse(s->left,t) or traverse(s->right,t);
    }
                 
};