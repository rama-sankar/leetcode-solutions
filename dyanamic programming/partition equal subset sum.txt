class Solution {
public:
    bool fun(vector<int>& nums,int i,int sum,int s,vector<vector<int>>& dp ){
        
        if(i==nums.size()) return 0;
        if(sum*2==s) return 1;
        if(dp[i][sum]!=-1) return dp[i][sum];
        dp[i][sum] = fun(nums,i+1,sum+nums[i],s,dp) + fun(nums,i+1,sum,s,dp);
        return dp[i][sum];
    }
    
    
    bool canPartition(vector<int>& nums) {
        
        int n=nums.size();
        sort(nums.begin(),nums.end());
        
       
        
        int s=0,sum=0;
        for(auto i:nums) s+=i;
        
         vector<vector<int>> dp(nums.size(),vector<int>(s,-1));
        
        return fun(nums,0,0,s,dp);
        
    }
};